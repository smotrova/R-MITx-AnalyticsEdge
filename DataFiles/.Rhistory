x <- 5
x
y <- 10
z
z <- x*y
z
ls ()
clear()
clean()
date()
clr ()
pwd()
delayedAssign()
graphics()
graphic()
getwd()
USDA <- read.csv("C:\\Users\\9C42~1\\AppData\\Local\\Temp\\Rtmp2fetNU\\data281464e33ebf")
View(USDA)
View(USDA)
names(USDA)
summary(USDA$ID)
type(USDA$ID)
class(USDA$ID)
str(USDA)
View(USDA)
&str()
?str()
plot(USDA$Protein, USDA$TotalFat)
table(USDA$Carbohydrate)
?table()
AnonymityPoll <- read.csv("C:\\Users\\9C42~1\\AppData\\Local\\Temp\\Rtmp2fetNU\\data281458ab11ba")
View(AnonymityPoll)
save.image("D:/LENA/edX/MITx-AnalyticEdge-15.071x/DataLabFiles/30.09.2015.RData")
load("D:/LENA/edX/MITx-AnalyticEdge-15.071x/DataLabFiles/30.09.2015.RData")
?names()
?str()
?labels()
# Poker winnings from Monday to Friday
poker_vector <- c(140, -50, 20, -120, 240)
# Roulette winnings from Monday to Friday
roulette_vector <- c(-24, -50, 100, -350, 10)
# Add names to both poker_vector and roulette_vector
days_vector <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
names(days_vector) <- poker_vector
names(days_vector) <- roulette_vector
days_vector
poker_vector
days_vector
# Poker winnings from Monday to Friday
poker_vector <- c(140, -50, 20, -120, 240)
# Roulette winnings from Monday to Friday
roulette_vector <- c(-24, -50, 100, -350, 10)
# Add names to both poker_vector and roulette_vector
days_vector <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
names(poker_vector) <- days_vector
names(roulette_vector) <- days_vector
days_vector
poker_vector
poker_vector2 <- c(Monday = 140, -50, 20, -120, 240)
poker_vector2
poker_vector1 <- c(140, -50, 20, -120, 240)
names(poker_vector1) <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
poker_vector1
roulette_vector1 <- c(-24, -50, 100, -350, 10)
days_vector <- names(poker_vector1)
names(roulette_vector1) <- days_vector
roulette_vector1 <- c(-24, -50, 100, -350, 10)
roulette_vector1 <- c(-24, -50, 100, -350, 10)
roulette_vector1
roulette_vector1 <- c(-24, -50, 100, -350, 10)
days_vector <- names(poker_vector1)
names(roulette_vector1) <- days_vector
roulette_vector1
roulette_vector2 <- c(-24, -50, 100, -350, 10)
names(roulette_vector2) <- "Monday"
roulette_vector2 <- c(-24, -50, 100, -350, 10)
names(roulette_vector2) <- "Monday"
roulette_vector2
poker_vector2
rm(list=ls())
AustinCityLimits <- read.csv("D:/LENA/edX/UTAustinX-Foundations of Data Analysis-UT.7.10x/PreLab&Lab/AustinCityLimits.csv")
View(AustinCityLimits)
acl<-AustinCityLimits
View(acl)
View(acl)
male_acl <-acl[acl$Gender == M,]
male_acl <-acl[acl$Gender == 'M',]
table(acl_male$Genre, acl_male$Grammy)
table(male_acl$Genre, male_acl$Grammy)
table(male_acl$Grammy, male_acl$Genre)
prop.table(table(male_acl$Grammy, male_acl$Genre))
barplot(table(male_acl$Grammy, male_acl$Genre), main = 'Artists in each Genre with a Grammy', xlab = '', legend = T, sidebar = T)
barplot(table(male_acl$Grammy, male_acl$Genre), main = 'Artists in each Genre with a Grammy', xlab = '', legend = T, bisid = T)
barplot(table(male_acl$Grammy, male_acl$Genre), main = 'Artists in each Genre with a Grammy', xlab = '', legend = T, beside = T)
barplot(table(male_acl$Grammy, male_acl$Genre), main = 'Artists in each Genre with a Grammy', xlab = 'Kind of Music', legend = T, beside = T)
barplot(table(male_acl$Grammy, male_acl$Genre), main = 'Male Artists in each Genre with a Grammy', xlab = 'Kind of Music', legend = T, beside = T)
barplot(table(male_acl$Grammy, male_acl$Genre), main = 'Male Artists in each Genre with/without a Grammy', xlab = 'Kind of Music', legend = T, beside = T)
prop.table(table(male_acl$Grammy))
table(male_acl$Grammy)
prop.table(table(male_acl$Grammy, male_acl$Genre), 2)
prop.table(table(male_acl$Grammy, male_acl$Genre), 1)
prop.table(table(male_acl$Grammy))
prop.table(table(male_acl$Grammy, male_acl$Genre), 1)
table(male_acl$Grammy)
table(male_acl$Grammy, male_acl$Genre)
prop.table(table(male_acl$Grammy, male_acl$Genre))
prop.table(table(male_acl$Grammy))
prop.table(table(male_acl$Grammy))
table(male_acl$Grammy, male_acl$Genre)
table(male_acl$Grammy)
table(male_acl$Gerne)
table(male_acl$Genre)
prop.table(table(male_acl$Grammy, male_acl$Genre))
2/7
table(male_acl$Grammy, male_acl$Genre)
AustinCityLimits <- read.csv("D:/LENA/edX/UTAustinX-Foundations of Data Analysis-UT.7.10x/PreLab&Lab/AustinCityLimits.csv")
View(AustinCityLimits)
acl<-AustinCityLimits
# Subset the data (males only)
male_acl <-acl[acl$Gender == 'M',]
# Create a table to show the marginal distributions for Genre and Grammy
table(male_acl$Grammy)
table(male_acl$Genre)
# Create a contingency table to show the conditional distribution for Genre and Grammy
table(male_acl$Grammy, male_acl$Genre)
# Make a bar chart to better visualize how many artists in each Genre received a Grammy.
barplot(table(male_acl$Grammy, male_acl$Genre), main = 'Male Artists in each Genre with/without a Grammy', xlab = 'Kind of Music', legend = T, beside = T)
# Calculate P(A):  the probability of winning a Grammy.
prop.table(table(male_acl$Grammy))
# Calculate P(A|B): the probability of winning Grammy, given the artist's Genre.
prop.table(table(male_acl$Grammy, male_acl$Genre), 1)
prop.table(table(male_acl$Grammy, male_acl$Genre))
2/35
2/7
prop.table(table(male_acl$Grammy, male_acl$Genre), 2)
prop.table(table(male_acl$Grammy))
prop.table(table(male_acl$Grammy, male_acl$Genre), 2)
2/7
prop.table(table(male_acl$Grammy))
prop.table(table(male_acl$Grammy, male_acl$Genre), 2)
table(male_acl$Grammy, male_acl$Genre)
View(male_acl)
AustinCityLimits <- read.csv("D:/LENA/edX/UTAustinX-Foundations of Data Analysis-UT.7.10x/PreLab&Lab/AustinCityLimits.csv")
View(AustinCityLimits)
acl <- AustinCityLimits
head(acl)
table(acl$Facebook.100k)
table(acl$Age)
table(acl$Age.Group)
prop.table(table(acl$Age.Group))
table(acl$Facebook.100k, acl$Age.Group)
prop.table(table(acl$Facebook.100k, acl$Age.Group))
table(acl$Facebook.100k, acl$Age.Group)
19/85
prop.table(table(acl$Facebook.100k, acl$Age.Group), 1)
prop.table(table(acl$Facebook.100k, acl$Age.Group), 2)
33/128
50/128
6/40
10/34
10/38
10/128
24/128
6/26
26/35
24/26
2/23
24/128
0.15/0/35
0.15/0.35
0.12*50
0.34*50
0.3*50
0.24*50
0.35*80
0.25*80
0.325*80
0.75*80
50/130
34/130
6/34
6/50
install.packages(c("nlme", "survival"))
install.packages("caret")
library("caret", lib.loc="C:/Program Files/R/R-3.2.1/library")
library("ggplot2", lib.loc="C:/Program Files/R/R-3.2.1/library")
library("class", lib.loc="C:/Program Files/R/R-3.2.1/library")
library("caret", lib.loc="C:/Program Files/R/R-3.2.1/library")
setwd("D:/LENA/edX/MITx-AnalyticEdge-15.071x/Assignments/DataFiles")
